# HWM 401k Database Schema - Minified
# Generated: 2025-07-18

# TABLES
client_quarter_markers:
  type: table
  purpose: tracks quarterly posting status for client payments
  fields:
    client_id, year, quarter  # PK composite
    is_posted: bit  # default 0
    created_date, modified_date: datetime  # default getdate()
  constraints:
    quarter: 1-4
    year: 2019-2100
    FK: client_id -> clients_all

clients_all:
  type: table
  purpose: master client list including deleted
  fields:
    client_id: int identity PK
    display_name, full_name: nvarchar(255)
    ima_signed_date: date
    is_deleted: bit  # default 0
    deleted_date: datetime

contacts:
  type: table
  purpose: client contact information by type
  fields:
    contact_id: int identity PK
    client_id: int FK -> clients_all
    contact_type: nvarchar(50)  # e.g. 'Primary'
    contact_name, phone, email, fax: nvarchar
    physical_address, mailing_address: nvarchar(500)

contracts:
  type: table
  purpose: client contract details and fee structures
  fields:
    contract_id: int identity PK
    client_id: int FK -> clients_all (cascade delete)
    contract_number, provider_name: nvarchar
    contract_start_date: date
    fee_type: nvarchar(50)  # 'percentage' | 'flat'
    percent_rate, flat_rate: float
    payment_schedule: nvarchar(50)  # 'quarterly' | 'monthly'
    num_people: int
    notes: nvarchar(MAX)
    is_active: bit  # default 1
  constraints:
    positive rates by fee_type
    valid payment_schedule values

payment_periods:
  type: table
  purpose: reference calendar for payment periods
  fields:
    period_type, year, period  # PK composite
    period_name: nvarchar(50)  # e.g. 'January 2025', 'Q1 2025'
    start_date, end_date: date
    is_current: bit  # default 0
  constraints:
    period_type: 'quarterly' | 'monthly'

payments:
  type: table
  purpose: actual payment records with variance tracking
  fields:
    payment_id: int identity PK
    contract_id, client_id: int FK
    received_date: date  # no future dates
    total_assets: float  # AUM when recorded
    actual_fee: float  # > 0
    method: nvarchar(50)
    notes: nvarchar(MAX)
    applied_period_type: nvarchar(10)
    applied_period: int  # 1-12 monthly, 1-4 quarterly
    applied_year: int  # 2018-current+1

quarterly_notes:
  type: table
  purpose: free-form notes per client quarter
  fields:
    client_id, year, quarter  # PK composite
    notes: nvarchar(MAX)
    last_updated: datetime
    updated_by: nvarchar(255)

test_results:
  type: table
  purpose: automated test execution tracking
  fields:
    result_id: int identity PK
    test_suite, test_name: varchar
    client_id: int
    test_context, expected_value, actual_value: varchar
    pass_fail: bit
    error_message: varchar(1000)
    execution_time_ms: int
    test_timestamp: datetime

variance_thresholds:
  type: table
  purpose: configurable variance tolerance levels
  fields:
    threshold_type: varchar(20) PK  # 'exact', 'normal', 'warning', 'alert'
    max_percent: decimal(5,2)
    display_order: int
    description: nvarchar(100)
    modified_date, modified_by

# VIEWS

clients:
  type: view
  purpose: active clients only filter
  sources: [clients_all WHERE is_deleted = 0]

dashboard_view:
  type: view
  purpose: main dashboard data with payment status
  sources: [clients c, contracts ct, contacts con, LastPayment CTE]
  fields:
    # Client/contract basics
    client_id, display_name, full_name, ima_signed_date
    provider_name, num_people, contract_id, payment_schedule, fee_type
    contact_name, phone, physical_address
    # Current period display
    current_period_display: "MMM YYYY | Q# YYYY by schedule"
    # Payment status
    payment_status: 'Due' | 'Paid'  # based on arrears billing
    last_payment_date, last_payment_amount
    # AUM tracking
    aum: recorded or estimated from percentage fee
    aum_source: 'recorded' | 'estimated' 
    # Rate calculations
    monthly_rate, quarterly_rate, annual_rate  # converted by schedule
    expected_fee: flat or percentage * AUM
    # Raw rates
    contract_number, percent_rate, flat_rate
  patterns:
    arrears_billing: "always billing for previous period"
    rate_conversion: "respects payment frequency with proper precision"

payment_status_base:
  type: view
  purpose: centralized payment status calculation
  sources: [clients, contracts, LastPayment CTE]
  fields:
    client_id, payment_schedule
    last_applied_period, last_applied_year, last_applied_period_type
    current_period, current_year  # calculated for arrears
    payment_status: 'Due' | 'Paid'

comprehensive_payment_summary:
  type: view
  purpose: payment details with variance calculations
  sources: [client_period_matrix cpm, payments p]
  fields:
    # All client/contract/period fields from cpm
    payment_id, received_date, actual_fee, total_assets, method, notes
    expected_fee: @calculate_expected_fee function
    variance_amount: actual - @expected_fee
    variance_percent: (@variance_amount / @expected_fee) * 100
    variance_status: @get_variance_status function

quarterly_summary_aggregated:
  type: view
  purpose: quarterly rollups with posting status
  sources: [comprehensive_payment_summary, client_quarter_markers]
  fields:
    provider_name, client_id, display_name, payment_schedule
    fee_type, percent_rate, flat_rate
    applied_year, quarter
    payment_count, expected_payment_count  # 3 monthly, 1 quarterly
    actual_total, expected_total: SUM(fees)
    variance: @actual_total - @expected_total
    variance_percent: @variance / @expected_total * 100
    variance_status: @get_variance_status function
    posted_count: based on is_posted marker
    fully_posted: is_posted from markers
    last_aum: MAX(total_assets)

quarterly_summary_enhanced:
  type: view
  purpose: quarterly data with notes and rate displays
  sources: [quarterly_summary_aggregated qsa, quarterly_notes qn]
  fields:
    # All qsa fields plus:
    quarterly_notes, notes_last_updated, has_notes: 0|1
    quarterly_rate, annual_rate  # calculated by schedule
    payment_status_display: "X/Y" actual vs expected

quarterly_page_data:
  type: view
  purpose: frontend quarterly view with provider rollups
  sources: [quarterly_summary_enhanced qse, provider_quarterly_summary ps, client_quarter_markers]
  fields:
    # Provider aggregates
    provider_name, provider_client_count, provider_actual_total
    provider_expected_total, provider_variance
    clients_posted, total_clients, provider_posted_display: "X/Y"
    # Client details
    client_id, display_name, payment_schedule, fee_type
    percent_rate, flat_rate, quarterly_rate
    client_expected, client_actual, client_variance, client_variance_percent
    variance_status, payment_count, expected_payment_count
    payment_status_display, fully_posted, has_notes, quarterly_notes
    posted_count, is_posted
    applied_year, quarter
    row_type: 'client'

annual_summary_by_client:
  type: view
  purpose: annual client rollups from quarterly data
  sources: [quarterly_summary_aggregated]
  fields:
    provider_name, client_id, display_name, payment_schedule
    fee_type, percent_rate, flat_rate, applied_year
    q1-q4_actual, q1-q4_payments: quarterly breakdowns
    annual_total, annual_expected: SUM(quarters)
    total_payments, total_expected_payments
    total_posted_count
    annual_rate: calculated by schedule
    annual_variance: @annual_total - @annual_expected
    annual_variance_percent
    fully_posted: all payments posted

payment_history_view:
  type: view
  purpose: detailed payment history with variance
  sources: [payments p, contracts ct]
  fields:
    # Payment details
    payment_id, contract_id, client_id, received_date
    total_assets, actual_fee, method, notes
    applied_period_type, applied_period, applied_year
    provider_name
    period_display: "MMM YYYY | Q# YYYY"
    # AUM handling
    display_aum: recorded or estimated
    is_aum_estimated: 0|1
    expected_fee: @calculate_expected_fee
    # Variance (blocked when AUM estimated)
    variance_amount: NULL if estimated, else actual - expected
    variance_percent: NULL if estimated, else calculation
    variance_status: 'unknown' if estimated, else @get_variance_status

# FUNCTIONS

calculate_expected_fee:
  type: function
  purpose: calculates expected fee for a period
  params: client_id, fee_type, percent_rate, flat_rate, period_type, year, period
  returns: float
  logic:
    flat: return flat_rate
    percentage: get AUM for CURRENT PERIOD ONLY * percent_rate
  warnings:
    - no backwards AUM lookup
    - returns NULL if no AUM for percentage fees

get_variance_status:
  type: function
  purpose: categorizes variance by thresholds
  params: actual_fee, expected_fee, has_payment
  returns: varchar(20)
  logic:
    no_payment: if has_payment = 0
    unknown: if expected_fee NULL or 0
    exact: if variance < exact_threshold (dollar amount)
    normal|warning|alert: by percentage thresholds
  warnings:
    - uses variance_thresholds table
    - checks exact match first (dollar threshold)

# KEY PATTERNS

payment_model:
  arrears_billing: "always bill for previous period"
  current_period: "month-1 or quarter-1 from today"
  
variance_handling:
  AUM_required: "percentage fees need AUM for variance"
  estimated_blocks: "no variance when AUM estimated"
  thresholds: "configurable in variance_thresholds table"

posting_workflow:
  marker_table: "client_quarter_markers tracks posted status"
  aggregation: "rolls up to quarterly/annual views"

rate_displays:
  monthly: "base rate or quarterly/3"
  quarterly: "base rate or monthly*3"  
  annual: "monthly*12 or quarterly*4"

  # Additional views for frontend integration

annual_page_data:
  type: view
  purpose: frontend annual view with provider rollups
  sources: [annual_summary_by_client asbc, provider_annual_summary pas]
  fields:
    # Provider rollups
    provider_name, provider_client_count
    provider_q1-q4_total, provider_annual_total
    # Client details
    client_id, display_name, payment_schedule
    fee_type, percent_rate, flat_rate, annual_rate
    q1-q4_actual, q1-q4_payments
    client_annual_total, client_annual_expected
    client_annual_variance, client_annual_variance_percent
    fully_posted, total_payments, total_expected_payments
    applied_year
    row_type: 'client'

provider_quarterly_summary:
  type: view
  purpose: provider-level quarterly aggregates
  sources: [quarterly_summary_aggregated]
  fields:
    provider_name, year, quarter
    client_count: COUNT(DISTINCT client_id)
    provider_actual_total, provider_expected_total, provider_variance
    clients_posted, total_clients
    posted_display: "X/Y" format

provider_annual_summary:
  type: view
  purpose: provider-level annual aggregates  
  sources: [annual_summary_by_client]
  fields:
    provider_name, year
    client_count: COUNT(DISTINCT client_id)
    q1-q4_total: SUM by quarter
    annual_total: SUM all

sidebar_clients_view:
  type: view
  purpose: navigation sidebar client list
  sources: [clients c, contracts ct, payment_status_base ps]
  fields:
    client_id, display_name, full_name
    provider_name
    payment_status: 'Due' | 'Paid'

payment_form_defaults_view:
  type: view
  purpose: prefill data for payment entry form
  sources: [clients, contracts, payment_status_base, last recorded AUM]
  fields:
    client_id, contract_id, payment_schedule
    fee_type, percent_rate, flat_rate
    suggested_aum: last recorded assets
    current_period, current_year, payment_status

payment_form_periods_view:
  type: view
  purpose: available periods for payment entry dropdown
  sources: [clients, contracts, payment_periods, payments]
  fields:
    client_id, year, period
    display_text: "MMM YYYY | Q# YYYY"
    is_paid: 0|1
  patterns:
    period_filter: "not future, from first payment or today"

# STORED PROCEDURES

sp_test_summary:
  type: procedure
  purpose: display test results summary
  outputs:
    summary: suite, pass/total, pass_rate%, status
    failures: if any, shows expected vs actual

# INDEXES (for performance reference)
indexes:
  client_quarter_markers: [year, quarter] INCLUDE is_posted
  payments: client_id, contract_id, date, period lookups
  contacts: client_id, type
  contracts: client_id, provider_name

# CRITICAL FRONTEND INTEGRATION POINTS

api_endpoints_needed:
  dashboard: dashboard_view
  quarterly_report: quarterly_page_data + provider_quarterly_summary
  annual_report: annual_page_data + provider_annual_summary
  payment_entry: payment_form_defaults_view + payment_form_periods_view
  payment_history: payment_history_view
  client_navigation: sidebar_clients_view
  
key_business_rules:
  billing: "arrears - always previous period"
  variance: "requires AUM for percentage fees"
  posting: "tracked separately in client_quarter_markers"
  deletion: "soft delete via is_deleted flag"
  
data_types_frontend:
  money: float (actual_fee, flat_rate, total_assets)
  percentages: float * 100 for display
  dates: date format for received_date, etc
  status: string enums (payment_status, variance_status)