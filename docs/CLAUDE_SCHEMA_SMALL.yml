# Payment Management System Schema

client_quarter_markers:
  type: table
  purpose: tracks quarterly posting status for client payments
  fields:
    - client_id, year, quarter  # PK composite
    - is_posted: bit(0)
    - created_date, modified_date: datetime(getdate())
  constraints:
    - quarter: 1-4
    - year: 2019-2100
    - FK: client_id -> clients_all

clients_all:
  type: table
  purpose: master client list including deleted
  fields:
    - client_id: identity PK
    - display_name, full_name: nvarchar(255)
    - ima_signed_date: date
    - is_deleted: bit(0), deleted_date
  
contacts:
  type: table
  purpose: client contact information by type
  fields:
    - contact_id: identity PK
    - client_id, contact_type  # type: Primary, etc
    - contact_name, phone, email, fax
    - physical_address, mailing_address: nvarchar(500)
  
contracts:
  type: table
  purpose: client payment contracts and rates
  fields:
    - contract_id: identity PK
    - client_id, contract_number, provider_name
    - contract_start_date, num_people
    - fee_type: percentage | flat
    - percent_rate, flat_rate  # mutually exclusive
    - payment_schedule: quarterly | monthly
    - notes: MAX
  constraints:
    - positive rates based on fee_type
    - CASCADE delete with client

payment_periods:
  type: table
  purpose: defines monthly/quarterly billing periods
  fields:
    - period_type, year, period  # PK composite
    - period_name: "December 2024" | "Q4 2024"
    - start_date, end_date
    - is_current: bit(0)
  
payments:
  type: table
  purpose: actual payment records with period application
  fields:
    - payment_id: identity PK
    - contract_id, client_id
    - received_date, total_assets, actual_fee
    - method, notes: MAX
    - applied_period_type, applied_period, applied_year
  constraints:
    - positive amounts, no future dates
    - period validation by type

quarterly_notes:
  type: table
  purpose: client-specific quarterly commentary
  fields:
    - client_id, year, quarter  # PK composite
    - notes: MAX
    - last_updated, updated_by

variance_thresholds:
  type: table
  purpose: configurable variance alert levels
  fields:
    - threshold_type: PK (exact, acceptable, warning, alert)
    - max_percent: decimal(5,2)
    - display_order, description
    - modified_date, modified_by

# === VIEWS ===

clients:
  type: view
  purpose: active clients only filter
  sources: [clients_all WHERE is_deleted = 0]

payment_status_base:
  type: view
  purpose: centralized payment status calculation
  sources: [clients, contracts, payments]
  fields:
    - last payment period/year/type
    - current billable period (arrears: -1 month/quarter)
    - payment_status: Due | Paid
  patterns:
    status: "Due if no payment OR payment < current period"

client_period_matrix:
  type: view
  purpose: all valid payment periods per client
  sources: [clients, contracts, payment_periods]
  fields:
    - client/contract basics
    - year, period, quarter mapping
    - period_display: "MMM YYYY | Q# YYYY"
    - current period context vars
  patterns:
    quarter_mapping: "months 1-3->Q1, 4-6->Q2, etc"

comprehensive_payment_summary:
  type: view
  purpose: payment details with variance calculations
  sources: [client_period_matrix cpm, payments p]
  fields:
    - all cpm fields
    - payment details when exists
    - @expected_fee: calculate_expected_fee()
    - variance_amount: actual - @expected
    - variance_percent: (variance/@expected)*100
    - variance_status: get_variance_status()

quarterly_summary_aggregated:
  type: view  
  purpose: quarterly payment aggregations by client
  sources: [comprehensive_payment_summary, client_quarter_markers]
  fields:
    - client/contract identifiers
    - applied_year, quarter
    - payment_count vs expected_payment_count
    - actual_total, expected_total, variance, variance_percent
    - variance_status: get_variance_status()
    - posted_count, fully_posted from markers
    - last_aum: MAX(total_assets)
  patterns:
    expected_count: "monthly=3, quarterly=1"

quarterly_summary_enhanced:
  type: view
  purpose: quarterly summary with notes and rates
  sources: [quarterly_summary_aggregated qsa, quarterly_notes qn]
  fields:
    - all qsa fields
    - quarterly_notes, has_notes flag
    - @quarterly_rate, @annual_rate calculations
    - payment_status_display: "actual/expected"

provider_quarterly_summary:
  type: view
  purpose: provider-level quarterly aggregates
  sources: [quarterly_summary_aggregated]
  fields:
    - provider_name, year, quarter
    - client_count, totals, variance
    - clients_posted/total_clients
    - posted_display: "X/Y"

quarterly_page_data:
  type: view
  purpose: combined provider+client quarterly data
  sources: [quarterly_summary_enhanced qse, provider_quarterly_summary ps, client_quarter_markers]
  fields:
    - provider aggregates with "provider_" prefix
    - client details with "client_" prefix
    - is_posted from markers
    - row_type: 'client'

annual_summary_by_client:
  type: view
  purpose: yearly client aggregations
  sources: [quarterly_summary_aggregated]
  fields:
    - q1-q4 breakdowns (actual, payments)
    - annual_total, annual_expected
    - @annual_rate calculations
    - annual_variance, annual_variance_percent
    - fully_posted: all payments posted

provider_annual_summary:
  type: view
  purpose: provider yearly totals
  sources: [annual_summary_by_client]
  fields:
    - provider_name, year
    - client_count
    - q1-q4 totals, annual_total

annual_page_data:
  type: view
  purpose: combined provider+client annual display
  sources: [annual_summary_by_client asbc, provider_annual_summary pas]
  fields:
    - provider totals with "provider_" prefix
    - client details with "client_" prefix
    - row_type: 'client'

dashboard_view:
  type: view
  purpose: current status and rate info for all clients
  sources: [clients c, contracts ct, contacts con, LastPayment CTE]
  fields:
    - client/contact/provider basics
    - current_period_display: arrears format
    - payment_status: Due | Paid
    - last payment info
    - aum: recorded or estimated from percentage
    - @monthly_rate, @quarterly_rate, @annual_rate
    - expected_fee for current period
  patterns:
    rate_conversions: "respect payment frequency"
    aum_estimation: "fee/percent_rate when assets null"

payment_history_view:
  type: view
  purpose: payment records with calculations
  sources: [payments p, contracts ct]
  fields:
    - payment details
    - period_display: formatted period
    - display_aum: recorded or estimated
    - @expected_fee via function
    - variance calculations (blocked if AUM estimated)
    - variance_status: 'unknown' if estimated
  warnings:
    - variance not calculated when AUM is estimated

sidebar_clients_view:
  type: view
  purpose: simplified client list with status
  sources: [clients c, contracts ct, payment_status_base ps]
  fields:
    - client_id, display_name, full_name
    - provider_name
    - payment_status

payment_form_defaults_view:
  type: view
  purpose: payment entry form suggestions
  sources: [clients, contracts, payment_status_base, last AUM subquery]
  fields:
    - contract details
    - suggested_aum from last recorded
    - current period/year/status

payment_form_periods_view:
  type: view
  purpose: available periods for payment entry
  sources: [clients, contracts, payment_periods, payments]
  fields:
    - client_id, year, period
    - display_text: period formatted
    - is_paid flag
  constraints:
    - periods <= today, >= first payment

yearly_summaries_view:
  type: view
  purpose: annual summaries from quarterly data
  sources: [quarterly_summary_aggregated]
  fields:
    - yearly aggregations
    - q1-q4 breakdowns
    - variance_status via function
    - fully_posted when all posted

# === FUNCTIONS ===

calculate_expected_fee:
  type: function
  purpose: determine expected payment amount
  params: client_id, fee_type, percent_rate, flat_rate, period_type, year, period
  returns: float
  logic:
    - flat: return flat_rate
    - percentage: get AUM for exact period, calc rate*AUM
    - no AUM: return NULL
  warnings:
    - only uses AUM from exact period match

get_variance_status:
  type: function
  purpose: categorize payment variance severity
  params: actual_fee, expected_fee, has_payment
  returns: varchar(20)
  logic:
    - no_payment: when has_payment=0
    - unknown: when expected null/zero
    - exact: variance < exact_threshold
    - check % thresholds ordered by display_order
  patterns:
    thresholds: "exact->acceptable->warning->alert"