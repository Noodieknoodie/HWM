-- Generated: 2025-07-08 14:08:37
-- ===== TABLES =====
-- Table: clients
CREATE TABLE [dbo].[clients] (
    [client_id] int IDENTITY(1,1) NOT NULL,
    [display_name] nvarchar(255) NOT NULL,
    [full_name] nvarchar(255),
    [ima_signed_date] date,
    CONSTRAINT [PK_clients] PRIMARY KEY (client_id)
);
-- Sample data (10 rows):
-- client_id | display_name | full_name | ima_signed_date
-- 1 | 'AirSea America' | 'THE TRUSTEES OF AIRSEA AMERICA INC 401K PLAN AND  | 2019-05-03
-- 2 | 'Bumgardner Architects (ABC)' | 'THE BUMGARDNER ARCHITECTS A WASHINGTON CORPORATIO | 2019-09-16
-- 3 | 'Amplero' | 'AMPLERO INC 401K' | 2019-07-10
-- 4 | 'Auction Edge' | 'AUCTION EDGE Inc 401k Profit Sharing Plan' | 2023-06-09
-- 5 | 'BDR Interactive' | 'BUSINESS DEVELOPMENT RESOURCES & OPPORTUNITIES IN | 2019-10-14
-- 6 | 'Bellmont Cabinets' | 'BELLMONT CABINETS' | 2022-07-15
-- 7 | 'Corina Bakery' | 'CORINA BAKERY' | 2021-08-23
-- 8 | 'Dakota Creek' | 'DAKOTA CREEK INDUSTRIES' | 2024-01-17
-- 9 | 'CG Engineering' | 'CG ENGINEERING PLLC' | 2019-06-01
-- 10 | 'Fast Water Heater' | 'FAST WATER HEATER CO' | 2020-03-20
-- Table: contacts
CREATE TABLE [dbo].[contacts] (
    [contact_id] int IDENTITY(1,1) NOT NULL,
    [client_id] int NOT NULL,
    [contact_type] nvarchar(50) NOT NULL,
    [contact_name] nvarchar(255),
    [phone] nvarchar(50),
    [email] nvarchar(255),
    [fax] nvarchar(50),
    [physical_address] nvarchar(500),
    [mailing_address] nvarchar(500),
    CONSTRAINT [PK_contacts] PRIMARY KEY (contact_id)
);
ALTER TABLE [dbo].[contacts] ADD CONSTRAINT [FK_contacts_clients]
    FOREIGN KEY (client_id) REFERENCES [dbo].[clients] (client_id);
-- Sample data (10 rows):
-- contact_id | client_id | contact_type | contact_name | phone | email | fax | physical_address | mailing_address
-- 1 | 1 | 'Primary' | 'Donald Jay' | '253-395-9551' | 'djay@asamerica.com' | NULL | '3500 West Vally HWY, Ste B-106, Auburn, WA 98001' | '3500 West Vally HWY, Ste B-106, Auburn, WA 98001'
-- 2 | 2 | 'Primary' | 'Mark Simpson' | '206-223-1361' | 'marks@bumgardner.biz' | NULL | '2111 Third Ave, Seattle, WA 98121' | '2111 Third Ave, Seattle, WA 98121'
-- 3 | 3 | 'Primary' | 'Doug Gelfand' | '206-816-3700' | 'dgelfand@amplero.com' | NULL | '1218 3rd Ave #900, Seattle, WA 98101' | NULL
-- 4 | 4 | 'Primary' | 'Robert Copeland' | '206-858-4800' | 'robertc@auctionedge.com' | NULL | '1424 4th Ave Suite 920, Seattle, WA 98101' | '1424 4th Ave Suite 920, Seattle, WA 98101'
-- 5 | 5 | 'Primary' | 'Bruce Wiseman' | '206-870-1880' | 'brucewiseman@bdrco.com' | NULL | '19604 International Blvd Ste 200, SeaTac, WA 9818 | NULL
-- 6 | 6 | 'Primary' | NULL | NULL | NULL | NULL | NULL | NULL
-- 7 | 7 | 'Primary' | 'Mike Ott' | '253-839-4968' | 'mott56@aol.com' | NULL | '602 Fawcett Ave, Tacoma, WA 98402' | '602 Fawcett Ave, Tacoma, WA 98402'
-- 8 | 8 | 'Primary' | NULL | '360-293-9575' | NULL | NULL | '820 4th St, Anacortes WA 98221' | NULL
-- 9 | 9 | 'Primary' | 'C. Chevy Chase' | '425-778-8500' | NULL | NULL | '250 4th Ave S Suite 200, Edmonds, WA 98020-3506' | '250 4th Ave S Suite 200, Edmonds, WA 98020-3506'
-- 10 | 10 | 'Primary' | 'Jason Hanleybrown' | '425-636-7078' | NULL | NULL | '11715 North Creek PWKY South, Bothell, WA 98088' | NULL
-- Table: contracts
CREATE TABLE [dbo].[contracts] (
    [contract_id] int IDENTITY(1,1) NOT NULL,
    [client_id] int NOT NULL,
    [contract_number] nvarchar(100),
    [provider_name] nvarchar(255),
    [contract_start_date] date,
    [fee_type] nvarchar(50),
    [percent_rate] float,
    [flat_rate] float,
    [payment_schedule] nvarchar(50),
    [num_people] int,
    [notes] nvarchar(MAX),
    CONSTRAINT [PK_contracts] PRIMARY KEY (contract_id)
);
ALTER TABLE [dbo].[contracts] ADD CONSTRAINT [FK_contracts_clients]
    FOREIGN KEY (client_id) REFERENCES [dbo].[clients] (client_id);
-- Sample data (10 rows):
-- contract_id | client_id | contract_number | provider_name | contract_start_date | fee_type | percent_rate | flat_rate | payment_schedule | num_people | notes
-- 1 | 1 | '134565' | 'John Hancock' | 2018-03-22 | 'percentage' | 0.0007 | NULL | 'monthly' | 18 | 'Phone: 800-333-0963 Option 1 with Contract # or O
-- 2 | 2 | NULL | 'Voya' | 2019-04-19 | 'percentage' | 0.000416 | NULL | 'monthly' | 35 | NULL
-- 3 | 3 | '551296' | 'Voya' | NULL | 'flat' | NULL | 666.66 | 'monthly' | NULL | NULL
-- 5 | 5 | '231393' | 'Ascensus Trust Company' | 2019-05-01 | 'flat' | NULL | 3000.0 | 'quarterly' | 93 | NULL
-- 6 | 6 | '29366' | 'John Hancock' | NULL | 'percentage' | 0.000125 | NULL | 'monthly' | 289 | NULL
-- 8 | 8 | '273504' | 'Ascensus' | NULL | 'percentage' | 0.003446 | NULL | 'quarterly' | 177 | NULL
-- 9 | 9 | '134019' | 'Direct from CG Engineering' | NULL | 'flat' | NULL | 2500.0 | 'quarterly' | 42 | NULL
-- 10 | 10 | NULL | 'Empower' | NULL | 'percentage' | 0.000667 | NULL | 'monthly' | 208 | NULL
-- 11 | 11 | '147266' | 'John Hancock' | NULL | 'percentage' | 0.000208 | NULL | 'monthly' | 531 | NULL
-- 12 | 12 | '222908' | 'Ascensus Trust Company' | NULL | 'flat' | NULL | 2500.0 | 'quarterly' | 80 | NULL
-- Table: payment_periods
CREATE TABLE [dbo].[payment_periods] (
    [period_type] nvarchar(10) NOT NULL,
    [year] int NOT NULL,
    [period] int NOT NULL,
    [period_name] nvarchar(50) NOT NULL,
    [start_date] date NOT NULL,
    [end_date] date NOT NULL,
    [is_current] bit NOT NULL DEFAULT ((0)),
    CONSTRAINT [PK__payment___EA8CC9CD5742350A] PRIMARY KEY (period_type, year, period),
    CONSTRAINT [CK__payment_p__perio__76619304] CHECK ([period_type]='quarterly' OR [period_type]='monthly')
);
-- Sample data (10 rows):
-- period_type | year | period | period_name | start_date | end_date | is_current
-- 'monthly' | 2019 | 1 | 'January 2019' | 2019-01-01 | 2019-01-31 | False
-- 'monthly' | 2019 | 2 | 'February 2019' | 2019-02-01 | 2019-02-28 | False
-- 'monthly' | 2019 | 3 | 'March 2019' | 2019-03-01 | 2019-03-31 | False
-- 'monthly' | 2019 | 4 | 'April 2019' | 2019-04-01 | 2019-04-30 | False
-- 'monthly' | 2019 | 5 | 'May 2019' | 2019-05-01 | 2019-05-31 | False
-- 'monthly' | 2019 | 6 | 'June 2019' | 2019-06-01 | 2019-06-30 | False
-- 'monthly' | 2019 | 7 | 'July 2019' | 2019-07-01 | 2019-07-31 | False
-- 'monthly' | 2019 | 8 | 'August 2019' | 2019-08-01 | 2019-08-31 | False
-- 'monthly' | 2019 | 9 | 'September 2019' | 2019-09-01 | 2019-09-30 | False
-- 'monthly' | 2019 | 10 | 'October 2019' | 2019-10-01 | 2019-10-31 | False
-- Table: payments
CREATE TABLE [dbo].[payments] (
    [payment_id] int IDENTITY(1,1) NOT NULL,
    [contract_id] int NOT NULL,
    [client_id] int NOT NULL,
    [received_date] date,
    [total_assets] float,
    [expected_fee] float,
    [actual_fee] float,
    [method] nvarchar(50),
    [notes] nvarchar(MAX),
    [applied_period_type] nvarchar(10),
    [applied_period] int,
    [applied_year] int,
    CONSTRAINT [PK_payments] PRIMARY KEY (payment_id),
    CONSTRAINT [chk_applied_period] CHECK ([applied_period_type]='monthly' AND ([applied_period]>=(1) AND [applied_period]<=(12)) OR [applied_period_type]='quarterly' AND ([applied_period]>=(1) AND [applied_period]<=(4)))
);
ALTER TABLE [dbo].[payments] ADD CONSTRAINT [FK_payments_clients]
    FOREIGN KEY (client_id) REFERENCES [dbo].[clients] (client_id);
ALTER TABLE [dbo].[payments] ADD CONSTRAINT [FK_payments_contracts]
    FOREIGN KEY (contract_id) REFERENCES [dbo].[contracts] (contract_id);
-- Sample data (10 rows):
-- payment_id | contract_id | client_id | received_date | total_assets | expected_fee | actual_fee | method | notes | applied_period_type | applied_period | applied_year
-- 1 | 1 | 1 | 2019-05-03 | 824305.0 | 542.01 | 547.51 | 'Auto - Check' | 'waiting on how John Hancock calculates fee paymen | 'monthly' | 4 | 2019
-- 2 | 1 | 1 | 2019-06-07 | 805477.0 | 547.28 | 535.03 | 'Auto - Check' | NULL | 'monthly' | 5 | 2019
-- 3 | 1 | 1 | 2019-07-05 | 839288.0 | 551.86 | 557.54 | 'Auto - Check' | NULL | 'monthly' | 6 | 2019
-- 4 | 1 | 1 | 2019-08-02 | 842294.0 | 572.3 | 559.45 | 'Auto - Check' | NULL | 'monthly' | 7 | 2019
-- 5 | 1 | 1 | 2019-09-06 | 842118.0 | 572.18 | 559.37 | 'Auto - Check' | NULL | 'monthly' | 8 | 2019
-- 7 | 1 | 1 | 2019-10-31 | 863024.0 | 604.1168 | 573.23 | 'Auto - Check' | NULL | 'monthly' | 9 | 2019
-- 8 | 1 | 1 | 2019-11-12 | 863024.0 | 573.23 | 573.23 | 'Auto - Check' | NULL | 'monthly' | 10 | 2019
-- 9 | 1 | 1 | 2019-12-16 | 876458.0 | 613.5206 | 582.15 | 'Auto - Check' | NULL | 'monthly' | 11 | 2019
-- 10 | 1 | 1 | 2020-01-13 | NULL | 609.54 | 609.54 | 'Auto - Check' | NULL | 'monthly' | 12 | 2019
-- 11 | 1 | 1 | 2020-02-19 | 919435.0 | 610.73 | 610.73 | 'Auto - Check' | NULL | 'monthly' | 1 | 2020
-- ===== VIEWS =====
-- View: client_metrics_view
-- REVERT TO NULL FOR YTD AND DELETE avg_quarterly_payment COLUMN
CREATE VIEW client_metrics_view AS
WITH LastPayment AS (
    SELECT 
        client_id,
        received_date as last_payment_date,
        actual_fee as last_payment_amount,
        total_assets as last_recorded_assets,
        ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY received_date DESC) as rn
    FROM payments
)
SELECT 
    c.client_id,
    lp.last_payment_date,
    lp.last_payment_amount,
    ytd.total_ytd_payments,  -- BACK TO NULL (no COALESCE)
    -- DELETED avg_quarterly_payment column entirely
    lp.last_recorded_assets,
    GETDATE() as last_updated
FROM clients c
LEFT JOIN LastPayment lp ON c.client_id = lp.client_id AND lp.rn = 1
LEFT JOIN (
    SELECT client_id, SUM(actual_fee) as total_ytd_payments
    FROM payments 
    WHERE applied_year = YEAR(GETDATE())
    GROUP BY client_id
) ytd ON c.client_id = ytd.client_id;
-- Sample data (29 total rows, showing 10):
-- client_id | last_payment_date | last_payment_amount | total_ytd_payments | last_recorded_assets | last_updated
-- 1 | 2025-05-13 | 930.09 | 2786.4700000000003 | 1400234.25 | 2025-07-08 21:08:38.530000
-- 2 | 2024-07-31 | 1906.77 | NULL | NULL | 2025-07-08 21:08:38.530000
-- 3 | 2024-07-31 | 666.66 | NULL | NULL | 2025-07-08 21:08:38.530000
-- 4 | 2025-04-28 | 13080.79 | 13080.79 | NULL | 2025-07-08 21:08:38.530000
-- 5 | 2025-04-16 | 3000.0 | 3000.0 | NULL | 2025-07-08 21:08:38.530000
-- 6 | 2025-05-13 | 1842.36 | 5570.2 | 14750011.93 | 2025-07-08 21:08:38.530000
-- 7 | 2024-07-31 | 39.06 | NULL | NULL | 2025-07-08 21:08:38.530000
-- 8 | 2025-04-16 | 5194.0 | 5194.0 | NULL | 2025-07-08 21:08:38.530000
-- 9 | 2024-05-20 | 5000.0 | NULL | NULL | 2025-07-08 21:08:38.530000
-- 10 | 2025-05-21 | 2059.46 | 10179.3 | 3089229.99 | 2025-07-08 21:08:38.530000
-- View: dashboard_view
CREATE VIEW [dbo].[dashboard_view] AS
WITH LastPayment AS (
    SELECT 
        client_id,
        received_date as last_payment_date,
        actual_fee as last_payment_amount,
        total_assets as last_recorded_assets,
        applied_period,
        applied_year,
        applied_period_type,
        ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY received_date DESC) as rn
    FROM payments
)
SELECT 
    -- Client basics
    c.client_id,
    c.display_name,
    c.full_name,
    c.ima_signed_date,
    
    -- Contract details
    ct.contract_id,
    ct.contract_number,
    ct.provider_name,
    ct.payment_schedule,
    ct.fee_type,
    ct.percent_rate,
    ct.flat_rate,
    ct.num_people,
    
    -- Payment metrics
    lp.last_payment_date,
    lp.last_payment_amount,
    lp.last_recorded_assets AS aum,
    ytd.total_ytd_payments,
    
    -- Latest payment period info
    lp.applied_period AS last_applied_period,
    lp.applied_year AS last_applied_year,
    lp.applied_period_type AS last_applied_period_type,
    
    -- Current period calculations
    CASE 
        WHEN ct.payment_schedule = 'monthly' THEN 
            CASE WHEN MONTH(GETDATE()) = 1 THEN 12 ELSE MONTH(GETDATE()) - 1 END
        WHEN ct.payment_schedule = 'quarterly' THEN 
            CASE WHEN DATEPART(QUARTER, GETDATE()) = 1 THEN 4 ELSE DATEPART(QUARTER, GETDATE()) - 1 END
    END AS current_period,
    CASE 
        WHEN MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly' THEN YEAR(GETDATE()) - 1
        WHEN DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly' THEN YEAR(GETDATE()) - 1
        ELSE YEAR(GETDATE())
    END AS current_year,
    
    -- AUM handling with reverse engineering
    CASE 
        WHEN lp.last_recorded_assets IS NOT NULL THEN lp.last_recorded_assets
        WHEN ct.fee_type = 'percentage' AND lp.last_payment_amount IS NOT NULL AND ct.percent_rate > 0 THEN
            lp.last_payment_amount / ct.percent_rate  -- Reverse engineer AUM
        ELSE NULL
    END AS aum_estimated,
    
    -- Flag if AUM is estimated
    CASE 
        WHEN lp.last_recorded_assets IS NOT NULL THEN 'recorded'
        WHEN ct.fee_type = 'percentage' AND lp.last_payment_amount IS NOT NULL AND ct.percent_rate > 0 THEN 'estimated'
        ELSE NULL
    END AS aum_source,
    
    -- Expected fee calculation using best available AUM
    CASE
        WHEN ct.fee_type = 'flat' THEN ct.flat_rate
        WHEN ct.fee_type = 'percentage' AND 
             (lp.last_recorded_assets IS NOT NULL OR 
              (lp.last_payment_amount IS NOT NULL AND ct.percent_rate > 0)) THEN 
            ROUND(
                CASE 
                    WHEN lp.last_recorded_assets IS NOT NULL THEN lp.last_recorded_assets
                    ELSE lp.last_payment_amount / ct.percent_rate
                END * ct.percent_rate, 2)
        ELSE NULL
    END AS expected_fee,
    
    -- Payment status
    CASE
        WHEN lp.applied_year IS NULL THEN 'Due'
        WHEN lp.applied_year < CASE 
            WHEN (MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly') OR 
                 (DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly')
            THEN YEAR(GETDATE()) - 1
            ELSE YEAR(GETDATE()) 
        END THEN 'Due'
        WHEN lp.applied_year = CASE 
            WHEN (MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly') OR 
                 (DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly')
            THEN YEAR(GETDATE()) - 1
            ELSE YEAR(GETDATE()) 
        END AND lp.applied_period < CASE
            WHEN ct.payment_schedule = 'monthly' THEN 
                CASE WHEN MONTH(GETDATE()) = 1 THEN 12 ELSE MONTH(GETDATE()) - 1 END
            WHEN ct.payment_schedule = 'quarterly' THEN 
                CASE WHEN DATEPART(QUARTER, GETDATE()) = 1 THEN 4 ELSE DATEPART(QUARTER, GETDATE()) - 1 END
        END THEN 'Due'
        ELSE 'Paid'
    END AS payment_status,
    
    -- Fee RATE reference (not dollar amounts for percentage clients!)
    CASE 
        WHEN ct.fee_type = 'flat' THEN ct.flat_rate
        WHEN ct.fee_type = 'percentage' THEN ct.percent_rate * 100  -- Convert to percentage
    END as monthly_rate,
    CASE 
        WHEN ct.fee_type = 'flat' THEN ct.flat_rate * 3
        WHEN ct.fee_type = 'percentage' THEN ct.percent_rate * 100 * 3  -- Monthly % × 3
    END as quarterly_rate,
    CASE 
        WHEN ct.fee_type = 'flat' THEN ct.flat_rate * 12
        WHEN ct.fee_type = 'percentage' THEN ct.percent_rate * 100 * 12  -- Monthly % × 12
    END as annual_rate

FROM clients c
JOIN contracts ct ON c.client_id = ct.client_id
LEFT JOIN LastPayment lp ON c.client_id = lp.client_id AND lp.rn = 1
LEFT JOIN (
    SELECT client_id, SUM(actual_fee) as total_ytd_payments
    FROM payments 
    WHERE applied_year = YEAR(GETDATE())
    GROUP BY client_id
) ytd ON c.client_id = ytd.client_id;
-- Sample data (29 total rows, showing 10):
-- client_id | display_name | full_name | ima_signed_date | contract_id | contract_number | provider_name | payment_schedule | fee_type | percent_rate | flat_rate | num_people | last_payment_date | last_payment_amount | aum | total_ytd_payments | last_applied_period | last_applied_year | last_applied_period_type | current_period | current_year | aum_estimated | aum_source | expected_fee | payment_status | monthly_rate | quarterly_rate | annual_rate
-- 1 | 'AirSea America' | 'THE TRUSTEES OF AIRSEA AMERICA INC 401K PLAN AND  | 2019-05-03 | 1 | '134565' | 'John Hancock' | 'monthly' | 'percentage' | 0.0007 | NULL | 18 | 2025-05-13 | 930.09 | 1400234.25 | 2786.4700000000003 | 4 | 2025 | 'monthly' | 6 | 2025 | 1400234.25 | 'recorded' | 980.16 | 'Due' | 0.06999999999999999 | 0.20999999999999996 | 0.8399999999999999
-- 2 | 'Bumgardner Architects (ABC)' | 'THE BUMGARDNER ARCHITECTS A WASHINGTON CORPORATIO | 2019-09-16 | 2 | NULL | 'Voya' | 'monthly' | 'percentage' | 0.000416 | NULL | 35 | 2024-07-31 | 1906.77 | NULL | NULL | 6 | 2024 | 'monthly' | 6 | 2025 | 4583581.730769231 | 'estimated' | 1906.77 | 'Due' | 0.0416 | 0.1248 | 0.4992
-- 3 | 'Amplero' | 'AMPLERO INC 401K' | 2019-07-10 | 3 | '551296' | 'Voya' | 'monthly' | 'flat' | NULL | 666.66 | NULL | 2024-07-31 | 666.66 | NULL | NULL | 6 | 2024 | 'monthly' | 6 | 2025 | NULL | NULL | 666.66 | 'Due' | 666.66 | 1999.98 | 7999.92
-- 4 | 'Auction Edge' | 'AUCTION EDGE Inc 401k Profit Sharing Plan' | 2023-06-09 | 31 | NULL | 'John Hancock' | 'quarterly' | 'percentage' | 0.00125 | NULL | 139 | 2025-04-28 | 13080.79 | NULL | 13080.79 | 1 | 2025 | 'quarterly' | 2 | 2025 | 10464632.0 | 'estimated' | 13080.79 | 'Due' | 0.125 | 0.375 | 1.5
-- 5 | 'BDR Interactive' | 'BUSINESS DEVELOPMENT RESOURCES & OPPORTUNITIES IN | 2019-10-14 | 5 | '231393' | 'Ascensus Trust Company' | 'quarterly' | 'flat' | NULL | 3000.0 | 93 | 2025-04-16 | 3000.0 | NULL | 3000.0 | 1 | 2025 | 'quarterly' | 2 | 2025 | NULL | NULL | 3000.0 | 'Due' | 3000.0 | 9000.0 | 36000.0
-- 6 | 'Bellmont Cabinets' | 'BELLMONT CABINETS' | 2022-07-15 | 6 | '29366' | 'John Hancock' | 'monthly' | 'percentage' | 0.000125 | NULL | 289 | 2025-05-13 | 1842.36 | 14750011.93 | 5570.2 | 4 | 2025 | 'monthly' | 6 | 2025 | 14750011.93 | 'recorded' | 1843.75 | 'Due' | 0.0125 | 0.037500000000000006 | 0.15000000000000002
-- 7 | 'Corina Bakery' | 'CORINA BAKERY' | 2021-08-23 | 32 | NULL | 'Voya' | 'monthly' | 'percentage' | 0.000417 | NULL | 15 | 2024-07-31 | 39.06 | NULL | NULL | 6 | 2024 | 'monthly' | 6 | 2025 | 93669.06474820145 | 'estimated' | 39.06 | 'Due' | 0.0417 | 0.1251 | 0.5004
-- 8 | 'Dakota Creek' | 'DAKOTA CREEK INDUSTRIES' | 2024-01-17 | 8 | '273504' | 'Ascensus' | 'quarterly' | 'percentage' | 0.003446 | NULL | 177 | 2025-04-16 | 5194.0 | NULL | 5194.0 | 1 | 2025 | 'quarterly' | 2 | 2025 | 1507254.7881601858 | 'estimated' | 5194.0 | 'Due' | 0.34459999999999996 | 1.0337999999999998 | 4.135199999999999
-- 9 | 'CG Engineering' | 'CG ENGINEERING PLLC' | 2019-06-01 | 9 | '134019' | 'Direct from CG Engineering' | 'quarterly' | 'flat' | NULL | 2500.0 | 42 | 2024-05-20 | 5000.0 | NULL | NULL | 1 | 2024 | 'quarterly' | 2 | 2025 | NULL | NULL | 2500.0 | 'Due' | 2500.0 | 7500.0 | 30000.0
-- 10 | 'Fast Water Heater' | 'FAST WATER HEATER CO' | 2020-03-20 | 10 | NULL | 'Empower' | 'monthly' | 'percentage' | 0.000667 | NULL | 208 | 2025-05-21 | 2059.46 | 3089229.99 | 10179.3 | 4 | 2025 | 'monthly' | 6 | 2025 | 3089229.99 | 'recorded' | 2060.52 | 'Due' | 0.0667 | 0.2001 | 0.8004
-- View: payment_form_defaults_view
CREATE VIEW [dbo].[payment_form_defaults_view] AS
SELECT 
    c.client_id,
    ct.contract_id,
    ct.payment_schedule,
    ct.fee_type,
    ct.percent_rate,
    ct.flat_rate,
    -- Last recorded AUM as suggestion
    lra.last_recorded_assets as suggested_aum,
    -- Current period info
    ps.current_period,
    ps.current_year,
    ps.payment_status
FROM clients c
JOIN contracts ct ON c.client_id = ct.client_id
LEFT JOIN payment_status_base ps ON c.client_id = ps.client_id
LEFT JOIN (
    SELECT 
        client_id,
        total_assets as last_recorded_assets,
        ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY received_date DESC) as rn
    FROM payments
    WHERE total_assets IS NOT NULL
) lra ON c.client_id = lra.client_id AND lra.rn = 1;
-- Sample data (29 total rows, showing 10):
-- client_id | contract_id | payment_schedule | fee_type | percent_rate | flat_rate | suggested_aum | current_period | current_year | payment_status
-- 1 | 1 | 'monthly' | 'percentage' | 0.0007 | NULL | 1400234.25 | 6 | 2025 | 'Due'
-- 2 | 2 | 'monthly' | 'percentage' | 0.000416 | NULL | 3247119.0 | 6 | 2025 | 'Due'
-- 3 | 3 | 'monthly' | 'flat' | NULL | 666.66 | 1533543.0 | 6 | 2025 | 'Due'
-- 4 | 31 | 'quarterly' | 'percentage' | 0.00125 | NULL | 9800000.0 | 2 | 2025 | 'Due'
-- 5 | 5 | 'quarterly' | 'flat' | NULL | 3000.0 | NULL | 2 | 2025 | 'Due'
-- 6 | 6 | 'monthly' | 'percentage' | 0.000125 | NULL | 14750011.93 | 6 | 2025 | 'Due'
-- 7 | 32 | 'monthly' | 'percentage' | 0.000417 | NULL | NULL | 6 | 2025 | 'Due'
-- 8 | 8 | 'quarterly' | 'percentage' | 0.003446 | NULL | NULL | 2 | 2025 | 'Due'
-- 9 | 9 | 'quarterly' | 'flat' | NULL | 2500.0 | NULL | 2 | 2025 | 'Due'
-- 10 | 10 | 'monthly' | 'percentage' | 0.000667 | NULL | 3089229.99 | 6 | 2025 | 'Due'
-- View: payment_form_periods_view
CREATE VIEW [dbo].[payment_form_periods_view] AS
SELECT 
    c.client_id,
    pp.year,
    pp.period,
    CASE 
        WHEN ct.payment_schedule = 'monthly' THEN pp.period_name
        WHEN ct.payment_schedule = 'quarterly' THEN 'Q' + CAST(pp.period AS VARCHAR) + ' ' + CAST(pp.year AS VARCHAR)
    END as display_text,
    CASE WHEN p.payment_id IS NOT NULL THEN 1 ELSE 0 END as is_paid
FROM clients c
JOIN contracts ct ON c.client_id = ct.client_id
JOIN payment_periods pp ON pp.period_type = ct.payment_schedule
LEFT JOIN payments p ON p.client_id = c.client_id 
    AND p.applied_year = pp.year 
    AND p.applied_period = pp.period
    AND p.applied_period_type = pp.period_type
LEFT JOIN (
    SELECT client_id, 
           MIN(DATEFROMPARTS(applied_year, applied_period, 1)) as first_payment_date
    FROM payments
    GROUP BY client_id
) first_payment ON c.client_id = first_payment.client_id
WHERE pp.end_date <= GETDATE()  -- Not future periods
  AND pp.start_date >= ISNULL(first_payment.first_payment_date, GETDATE());  -- From first payment or today for new clients
-- Sample data (1091 total rows, showing 110):
-- client_id | year | period | display_text | is_paid
-- 1 | 2019 | 4 | 'April 2019' | 1
-- 1 | 2019 | 5 | 'May 2019' | 1
-- 1 | 2019 | 6 | 'June 2019' | 1
-- 1 | 2019 | 7 | 'July 2019' | 1
-- 1 | 2019 | 8 | 'August 2019' | 1
-- 1 | 2019 | 9 | 'September 2019' | 1
-- 1 | 2019 | 10 | 'October 2019' | 1
-- 1 | 2019 | 11 | 'November 2019' | 1
-- 1 | 2019 | 12 | 'December 2019' | 1
-- 1 | 2020 | 1 | 'January 2020' | 1
-- ...
-- 2 | 2021 | 9 | 'September 2021' | 1
-- 2 | 2021 | 10 | 'October 2021' | 1
-- 2 | 2021 | 11 | 'November 2021' | 1
-- 2 | 2021 | 12 | 'December 2021' | 1
-- 2 | 2022 | 1 | 'January 2022' | 1
-- 2 | 2022 | 2 | 'February 2022' | 1
-- 2 | 2022 | 3 | 'March 2022' | 1
-- 2 | 2022 | 4 | 'April 2022' | 1
-- 2 | 2022 | 5 | 'May 2022' | 1
-- 2 | 2022 | 6 | 'June 2022' | 1
-- ...
-- 3 | 2023 | 12 | 'December 2023' | 1
-- 3 | 2024 | 1 | 'January 2024' | 1
-- 3 | 2024 | 2 | 'February 2024' | 1
-- 3 | 2024 | 3 | 'March 2024' | 1
-- 3 | 2024 | 4 | 'April 2024' | 1
-- 3 | 2024 | 5 | 'May 2024' | 1
-- 3 | 2024 | 6 | 'June 2024' | 1
-- 3 | 2024 | 7 | 'July 2024' | 0
-- 3 | 2024 | 8 | 'August 2024' | 0
-- 3 | 2024 | 9 | 'September 2024' | 0
-- ...
-- 7 | 2022 | 4 | 'April 2022' | 1
-- 7 | 2022 | 5 | 'May 2022' | 1
-- 7 | 2022 | 6 | 'June 2022' | 1
-- 7 | 2022 | 7 | 'July 2022' | 1
-- 7 | 2022 | 8 | 'August 2022' | 1
-- 7 | 2022 | 9 | 'September 2022' | 1
-- 7 | 2022 | 10 | 'October 2022' | 1
-- 7 | 2022 | 11 | 'November 2022' | 1
-- 7 | 2022 | 12 | 'December 2022' | 1
-- 7 | 2023 | 1 | 'January 2023' | 1
-- ...
-- 10 | 2022 | 4 | 'April 2022' | 1
-- 10 | 2022 | 5 | 'May 2022' | 1
-- 10 | 2022 | 6 | 'June 2022' | 1
-- 10 | 2022 | 7 | 'July 2022' | 1
-- 10 | 2022 | 8 | 'August 2022' | 1
-- 10 | 2022 | 9 | 'September 2022' | 1
-- 10 | 2022 | 10 | 'October 2022' | 1
-- 10 | 2022 | 11 | 'November 2022' | 1
-- 10 | 2022 | 12 | 'December 2022' | 1
-- 10 | 2023 | 1 | 'January 2023' | 1
-- ...
-- 12 | 2025 | 1 | 'Q1 2025' | 1
-- 12 | 2025 | 2 | 'Q2 2025' | 0
-- 13 | 2019 | 5 | 'May 2019' | 1
-- 13 | 2019 | 6 | 'June 2019' | 0
-- 13 | 2019 | 7 | 'July 2019' | 0
-- 13 | 2019 | 8 | 'August 2019' | 0
-- 13 | 2019 | 9 | 'September 2019' | 0
-- 13 | 2019 | 10 | 'October 2019' | 1
-- 13 | 2019 | 11 | 'November 2019' | 0
-- 13 | 2019 | 12 | 'December 2019' | 1
-- ...
-- 14 | 2025 | 2 | 'Q2 2025' | 0
-- 15 | 2019 | 5 | 'May 2019' | 1
-- 15 | 2019 | 6 | 'June 2019' | 1
-- 15 | 2019 | 7 | 'July 2019' | 1
-- 15 | 2019 | 8 | 'August 2019' | 1
-- 15 | 2019 | 9 | 'September 2019' | 1
-- 15 | 2019 | 10 | 'October 2019' | 1
-- 15 | 2019 | 11 | 'November 2019' | 1
-- 15 | 2019 | 12 | 'December 2019' | 1
-- 15 | 2020 | 1 | 'January 2020' | 1
-- ...
-- 17 | 2025 | 1 | 'Q1 2025' | 0
-- 17 | 2025 | 2 | 'Q2 2025' | 0
-- 18 | 2019 | 2 | 'Q2 2019' | 1
-- 18 | 2019 | 3 | 'Q3 2019' | 1
-- 18 | 2019 | 4 | 'Q4 2019' | 1
-- 18 | 2020 | 1 | 'Q1 2020' | 1
-- 18 | 2020 | 2 | 'Q2 2020' | 1
-- 18 | 2020 | 3 | 'Q3 2020' | 1
-- 18 | 2020 | 4 | 'Q4 2020' | 1
-- 18 | 2021 | 1 | 'Q1 2021' | 1
-- ...
-- 21 | 2024 | 1 | 'January 2024' | 1
-- 21 | 2024 | 2 | 'February 2024' | 1
-- 21 | 2024 | 3 | 'March 2024' | 1
-- 21 | 2024 | 4 | 'April 2024' | 1
-- 21 | 2024 | 5 | 'May 2024' | 1
-- 21 | 2024 | 6 | 'June 2024' | 1
-- 21 | 2024 | 7 | 'July 2024' | 1
-- 21 | 2024 | 8 | 'August 2024' | 1
-- 21 | 2024 | 9 | 'September 2024' | 1
-- 21 | 2024 | 10 | 'October 2024' | 1
-- ...
-- 23 | 2021 | 10 | 'October 2021' | 1
-- 23 | 2021 | 11 | 'November 2021' | 1
-- 23 | 2021 | 12 | 'December 2021' | 1
-- 23 | 2022 | 1 | 'January 2022' | 1
-- 23 | 2022 | 2 | 'February 2022' | 1
-- 23 | 2022 | 3 | 'March 2022' | 1
-- 23 | 2022 | 4 | 'April 2022' | 1
-- 23 | 2022 | 5 | 'May 2022' | 1
-- 23 | 2022 | 6 | 'June 2022' | 1
-- 23 | 2022 | 7 | 'July 2022' | 1
-- ...
-- 26 | 2023 | 4 | 'Q4 2023' | 1
-- 26 | 2024 | 1 | 'Q1 2024' | 1
-- 26 | 2024 | 2 | 'Q2 2024' | 1
-- 26 | 2024 | 3 | 'Q3 2024' | 1
-- 26 | 2024 | 4 | 'Q4 2024' | 1
-- 26 | 2025 | 1 | 'Q1 2025' | 1
-- 26 | 2025 | 2 | 'Q2 2025' | 0
-- 27 | 2022 | 2 | 'Q2 2022' | 0
-- 27 | 2022 | 3 | 'Q3 2022' | 0
-- 27 | 2022 | 4 | 'Q4 2022' | 1
-- View: payment_history_view
-- =====================================================
-- STEP 3: Create enhanced payment_history_view
-- This replaces payment_variance_view for the payment history table
-- =====================================================
CREATE VIEW [dbo].[payment_history_view] AS
SELECT 
    p.payment_id,
    p.contract_id,
    p.client_id,
    p.received_date,
    p.total_assets,
    p.expected_fee,
    p.actual_fee,
    p.method,
    p.notes,
    p.applied_period_type,
    p.applied_period,
    p.applied_year,
    
    -- Provider name from contracts
    ct.provider_name,
    
    -- Formatted period display
    CASE 
        WHEN p.applied_period_type = 'monthly' THEN 
            CASE p.applied_period
                WHEN 1 THEN 'Jan ' + CAST(p.applied_year AS VARCHAR)
                WHEN 2 THEN 'Feb ' + CAST(p.applied_year AS VARCHAR)
                WHEN 3 THEN 'Mar ' + CAST(p.applied_year AS VARCHAR)
                WHEN 4 THEN 'Apr ' + CAST(p.applied_year AS VARCHAR)
                WHEN 5 THEN 'May ' + CAST(p.applied_year AS VARCHAR)
                WHEN 6 THEN 'Jun ' + CAST(p.applied_year AS VARCHAR)
                WHEN 7 THEN 'Jul ' + CAST(p.applied_year AS VARCHAR)
                WHEN 8 THEN 'Aug ' + CAST(p.applied_year AS VARCHAR)
                WHEN 9 THEN 'Sep ' + CAST(p.applied_year AS VARCHAR)
                WHEN 10 THEN 'Oct ' + CAST(p.applied_year AS VARCHAR)
                WHEN 11 THEN 'Nov ' + CAST(p.applied_year AS VARCHAR)
                WHEN 12 THEN 'Dec ' + CAST(p.applied_year AS VARCHAR)
            END
        WHEN p.applied_period_type = 'quarterly' THEN 
            'Q' + CAST(p.applied_period AS VARCHAR) + ' ' + CAST(p.applied_year AS VARCHAR)
    END AS period_display,
    
    -- Variance calculations
    p.actual_fee - p.expected_fee AS variance_amount,
    CASE 
        WHEN p.expected_fee = 0 OR p.expected_fee IS NULL THEN NULL
        ELSE ((p.actual_fee - p.expected_fee) / p.expected_fee) * 100
    END AS variance_percent,
    
    -- Variance status for coloring
    CASE 
        WHEN p.expected_fee IS NULL OR p.expected_fee = 0 THEN 'unknown'
        WHEN ABS(p.actual_fee - p.expected_fee) < 0.01 THEN 'exact'
        WHEN ABS(((p.actual_fee - p.expected_fee) / p.expected_fee) * 100) <= 5 THEN 'acceptable'
        WHEN ABS(((p.actual_fee - p.expected_fee) / p.expected_fee) * 100) <= 15 THEN 'warning'
        ELSE 'alert'
    END AS variance_status
    
FROM payments p
JOIN contracts ct ON p.contract_id = ct.contract_id;
-- Sample data (888 total rows, showing 90):
-- payment_id | contract_id | client_id | received_date | total_assets | expected_fee | actual_fee | method | notes | applied_period_type | applied_period | applied_year | provider_name | period_display | variance_amount | variance_percent | variance_status
-- 1 | 1 | 1 | 2019-05-03 | 824305.0 | 542.01 | 547.51 | 'Auto - Check' | 'waiting on how John Hancock calculates fee paymen | 'monthly' | 4 | 2019 | 'John Hancock' | 'Apr 2019' | 5.5 | 1.0147414254349552 | 'acceptable'
-- 2 | 1 | 1 | 2019-06-07 | 805477.0 | 547.28 | 535.03 | 'Auto - Check' | NULL | 'monthly' | 5 | 2019 | 'John Hancock' | 'May 2019' | -12.25 | -2.2383423476099984 | 'acceptable'
-- 3 | 1 | 1 | 2019-07-05 | 839288.0 | 551.86 | 557.54 | 'Auto - Check' | NULL | 'monthly' | 6 | 2019 | 'John Hancock' | 'Jun 2019' | 5.67999999999995 | 1.0292465480375368 | 'acceptable'
-- 4 | 1 | 1 | 2019-08-02 | 842294.0 | 572.3 | 559.45 | 'Auto - Check' | NULL | 'monthly' | 7 | 2019 | 'John Hancock' | 'Jul 2019' | -12.849999999999909 | -2.2453258780359793 | 'acceptable'
-- 5 | 1 | 1 | 2019-09-06 | 842118.0 | 572.18 | 559.37 | 'Auto - Check' | NULL | 'monthly' | 8 | 2019 | 'John Hancock' | 'Aug 2019' | -12.809999999999945 | -2.238805970149244 | 'acceptable'
-- 7 | 1 | 1 | 2019-10-31 | 863024.0 | 604.1168 | 573.23 | 'Auto - Check' | NULL | 'monthly' | 9 | 2019 | 'John Hancock' | 'Sep 2019' | -30.886799999999994 | -5.112719924358998 | 'warning'
-- 8 | 1 | 1 | 2019-11-12 | 863024.0 | 573.23 | 573.23 | 'Auto - Check' | NULL | 'monthly' | 10 | 2019 | 'John Hancock' | 'Oct 2019' | 0.0 | 0.0 | 'exact'
-- 9 | 1 | 1 | 2019-12-16 | 876458.0 | 613.5206 | 582.15 | 'Auto - Check' | NULL | 'monthly' | 11 | 2019 | 'John Hancock' | 'Nov 2019' | -31.370599999999968 | -5.113210542563684 | 'warning'
-- 10 | 1 | 1 | 2020-01-13 | NULL | 609.54 | 609.54 | 'Auto - Check' | NULL | 'monthly' | 12 | 2019 | 'John Hancock' | 'Dec 2019' | 0.0 | 0.0 | 'exact'
-- 11 | 1 | 1 | 2020-02-19 | 919435.0 | 610.73 | 610.73 | 'Auto - Check' | NULL | 'monthly' | 1 | 2020 | 'John Hancock' | 'Jan 2020' | 0.0 | 0.0 | 'exact'
-- ...
-- 105 | 2 | 2 | 2022-07-15 | NULL | NULL | 1361.45 | 'Auto - ACH' | NULL | 'monthly' | 6 | 2022 | 'Voya' | 'Jun 2022' | NULL | NULL | 'unknown'
-- 106 | 2 | 2 | 2022-08-19 | NULL | NULL | 1469.96 | 'Auto - ACH' | NULL | 'monthly' | 7 | 2022 | 'Voya' | 'Jul 2022' | NULL | NULL | 'unknown'
-- 107 | 2 | 2 | 2022-09-16 | NULL | NULL | 1428.65 | 'Auto - ACH' | NULL | 'monthly' | 8 | 2022 | 'Voya' | 'Aug 2022' | NULL | NULL | 'unknown'
-- 108 | 2 | 2 | 2022-10-21 | NULL | NULL | 1317.55 | 'Auto - ACH' | NULL | 'monthly' | 9 | 2022 | 'Voya' | 'Sep 2022' | NULL | NULL | 'unknown'
-- 109 | 2 | 2 | 2022-11-18 | NULL | NULL | 1406.73 | 'Auto - ACH' | NULL | 'monthly' | 10 | 2022 | 'Voya' | 'Oct 2022' | NULL | NULL | 'unknown'
-- 110 | 2 | 2 | 2022-12-16 | NULL | NULL | 1489.61 | 'Auto - ACH' | NULL | 'monthly' | 11 | 2022 | 'Voya' | 'Nov 2022' | NULL | NULL | 'unknown'
-- 111 | 2 | 2 | 2023-01-20 | NULL | NULL | 1431.56 | 'Auto - ACH' | NULL | 'monthly' | 12 | 2022 | 'Voya' | 'Dec 2022' | NULL | NULL | 'unknown'
-- 112 | 2 | 2 | 2023-02-17 | NULL | NULL | 1528.17 | 'Auto - ACH' | NULL | 'monthly' | 1 | 2023 | 'Voya' | 'Jan 2023' | NULL | NULL | 'unknown'
-- 113 | 2 | 2 | 2023-03-17 | NULL | NULL | 1494.38 | 'Auto - ACH' | NULL | 'monthly' | 2 | 2023 | 'Voya' | 'Feb 2023' | NULL | NULL | 'unknown'
-- 114 | 2 | 2 | 2023-04-21 | NULL | NULL | 1528.78 | 'Auto - ACH' | NULL | 'monthly' | 3 | 2023 | 'Voya' | 'Mar 2023' | NULL | NULL | 'unknown'
-- ...
-- 224 | 5 | 5 | 2021-07-16 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 2 | 2021 | 'Ascensus Trust Company' | 'Q2 2021' | 0.0 | 0.0 | 'exact'
-- 225 | 5 | 5 | 2021-10-18 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2021 | 'Ascensus Trust Company' | 'Q3 2021' | 0.0 | 0.0 | 'exact'
-- 226 | 5 | 5 | 2022-01-19 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 4 | 2021 | 'Ascensus Trust Company' | 'Q4 2021' | 0.0 | 0.0 | 'exact'
-- 227 | 5 | 5 | 2022-04-18 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 1 | 2022 | 'Ascensus Trust Company' | 'Q1 2022' | 0.0 | 0.0 | 'exact'
-- 228 | 5 | 5 | 2022-07-18 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 2 | 2022 | 'Ascensus Trust Company' | 'Q2 2022' | 0.0 | 0.0 | 'exact'
-- 229 | 5 | 5 | 2022-10-18 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2022 | 'Ascensus Trust Company' | 'Q3 2022' | 0.0 | 0.0 | 'exact'
-- 230 | 5 | 5 | 2023-01-17 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 4 | 2022 | 'Ascensus Trust Company' | 'Q4 2022' | 0.0 | 0.0 | 'exact'
-- 231 | 5 | 5 | 2023-04-17 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 1 | 2023 | 'Ascensus Trust Company' | 'Q1 2023' | 0.0 | 0.0 | 'exact'
-- 232 | 5 | 5 | 2023-07-17 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 2 | 2023 | 'Ascensus Trust Company' | 'Q2 2023' | 0.0 | 0.0 | 'exact'
-- 233 | 5 | 5 | 2023-10-16 | NULL | 3000.0 | 3000.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2023 | 'Ascensus Trust Company' | 'Q3 2023' | 0.0 | 0.0 | 'exact'
-- ...
-- 332 | 9 | 9 | 2024-05-20 | NULL | 5000.0 | 5000.0 | 'Invoice - Check' | 'one check rcvd5.20.24 for $5000 Q4.2023 & Q1.2024 | 'quarterly' | 1 | 2024 | 'Direct from CG Engineering' | 'Q1 2024' | 0.0 | 0.0 | 'exact'
-- 333 | 10 | 10 | 2020-03-20 | NULL | NULL | 302.65 | NULL | NULL | 'monthly' | 2 | 2020 | 'Empower' | 'Feb 2020' | NULL | NULL | 'unknown'
-- 334 | 10 | 10 | 2020-04-20 | 461638.0 | 307.912546 | 307.75 | NULL | NULL | 'monthly' | 3 | 2020 | 'Empower' | 'Mar 2020' | -0.16254600000002029 | -0.052789664504290866 | 'acceptable'
-- 335 | 10 | 10 | 2020-05-19 | 499313.0 | 333.041771 | 332.9 | NULL | NULL | 'monthly' | 4 | 2020 | 'Empower' | 'Apr 2020' | -0.14177100000000564 | -0.042568534143426005 | 'acceptable'
-- 336 | 10 | 10 | 2020-06-22 | 575454.0 | 383.827818 | 383.56 | NULL | NULL | 'monthly' | 5 | 2020 | 'Empower' | 'May 2020' | -0.267817999999977 | -0.06977555753918206 | 'acceptable'
-- 337 | 10 | 10 | 2020-07-22 | 633253.0 | 422.379751 | 422.17 | NULL | NULL | 'monthly' | 6 | 2020 | 'Empower' | 'Jun 2020' | -0.20975099999998292 | -0.04965934079543101 | 'acceptable'
-- 338 | 10 | 10 | 2020-08-24 | 674093.0 | 449.620031 | 449.38 | NULL | NULL | 'monthly' | 7 | 2020 | 'Empower' | 'Jul 2020' | -0.24003099999998767 | -0.05338529946411299 | 'acceptable'
-- 339 | 10 | 10 | 2020-09-21 | 746576.0 | 497.966192 | 497.67 | NULL | NULL | 'monthly' | 8 | 2020 | 'Empower' | 'Aug 2020' | -0.29619199999996226 | -0.05948034319566062 | 'acceptable'
-- 340 | 10 | 10 | 2020-10-15 | 767631.0 | 512.009877 | 511.69 | NULL | NULL | 'monthly' | 9 | 2020 | 'Empower' | 'Sep 2020' | -0.31987699999996266 | -0.06247477136070222 | 'acceptable'
-- 341 | 10 | 10 | 2020-11-23 | 810720.0 | 540.75024 | 540.47 | NULL | NULL | 'monthly' | 10 | 2020 | 'Empower' | 'Oct 2020' | -0.2802399999999352 | -0.05182429507565919 | 'acceptable'
-- ...
-- 434 | 12 | 12 | 2022-10-18 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2022 | 'Ascensus Trust Company' | 'Q3 2022' | -250.0 | -10.0 | 'warning'
-- 436 | 12 | 12 | 2023-04-17 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 1 | 2023 | 'Ascensus Trust Company' | 'Q1 2023' | -250.0 | -10.0 | 'warning'
-- 437 | 12 | 12 | 2023-07-17 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 2 | 2023 | 'Ascensus Trust Company' | 'Q2 2023' | -250.0 | -10.0 | 'warning'
-- 438 | 12 | 12 | 2023-10-16 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2023 | 'Ascensus Trust Company' | 'Q3 2023' | -250.0 | -10.0 | 'warning'
-- 439 | 12 | 12 | 2024-01-17 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 4 | 2023 | 'Ascensus Trust Company' | 'Q4 2023' | -250.0 | -10.0 | 'warning'
-- 440 | 12 | 12 | 2024-04-12 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 1 | 2024 | 'Ascensus Trust Company' | 'Q1 2024' | -250.0 | -10.0 | 'warning'
-- 441 | 12 | 12 | 2024-07-17 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 2 | 2024 | 'Ascensus Trust Company' | 'Q2 2024' | -250.0 | -10.0 | 'warning'
-- 442 | 12 | 12 | 2024-10-16 | NULL | 2500.0 | 2250.0 | 'Auto - Check' | NULL | 'quarterly' | 3 | 2024 | 'Ascensus Trust Company' | 'Q3 2024' | -250.0 | -10.0 | 'warning'
-- 443 | 13 | 13 | 2019-06-06 | NULL | 10000.0 | 10000.0 | 'Auto - Check' | 'Invoiced 6/1/2019 to Harper Engineering, 1 time F | 'monthly' | 5 | 2019 | 'Fidelity' | 'May 2019' | 0.0 | 0.0 | 'exact'
-- 444 | 13 | 13 | 2019-11-06 | NULL | 1666.62 | 1666.62 | 'Auto - Check' | 'Advisory Fee' | 'monthly' | 10 | 2019 | 'Fidelity' | 'Oct 2019' | 0.0 | 0.0 | 'exact'
-- ...
-- 535 | 15 | 15 | 2023-06-12 | 167615.0 | 69.895455 | 69.84 | 'Auto - Check' | NULL | 'monthly' | 5 | 2023 | 'Transamerica' | 'May 2023' | -0.055454999999994925 | -0.07933992274604254 | 'acceptable'
-- 536 | 15 | 15 | 2023-07-12 | 166205.0 | 69.307485 | 69.25 | 'Auto - Check' | NULL | 'monthly' | 6 | 2023 | 'Transamerica' | 'Jun 2023' | -0.057484999999999786 | -0.08294197949903936 | 'acceptable'
-- 537 | 15 | 15 | 2023-08-08 | 114504.0 | 47.748168 | 47.71 | 'Auto - Check' | NULL | 'monthly' | 7 | 2023 | 'Transamerica' | 'Jul 2023' | -0.03816799999999887 | -0.07993605115907038 | 'acceptable'
-- 538 | 15 | 15 | 2023-09-13 | 111828.0 | 46.632276 | 46.6 | 'Auto - Check' | NULL | 'monthly' | 8 | 2023 | 'Transamerica' | 'Aug 2023' | -0.032275999999995975 | -0.06921386380539517 | 'acceptable'
-- 539 | 15 | 15 | 2023-10-12 | 107136.0 | 44.675712 | 44.64 | 'Auto - Check' | NULL | 'monthly' | 9 | 2023 | 'Transamerica' | 'Sep 2023' | -0.035711999999996635 | -0.07993605115906521 | 'acceptable'
-- 540 | 15 | 15 | 2023-11-09 | 103915.0 | 43.332555 | 43.3 | 'Auto - Check' | NULL | 'monthly' | 10 | 2023 | 'Transamerica' | 'Oct 2023' | -0.03255500000000211 | -0.07512827249628394 | 'acceptable'
-- 541 | 15 | 15 | 2023-12-11 | 111634.0 | 46.551378 | 46.51 | 'Auto - Check' | NULL | 'monthly' | 11 | 2023 | 'Transamerica' | 'Nov 2023' | -0.04137800000000169 | -0.08888673499633393 | 'acceptable'
-- 542 | 15 | 15 | 2024-01-10 | 117458.0 | 48.979986 | 48.94 | 'Auto - Check' | NULL | 'monthly' | 12 | 2023 | 'Transamerica' | 'Dec 2023' | -0.03998599999999897 | -0.08163742635614263 | 'acceptable'
-- 543 | 15 | 15 | 2024-02-13 | 117290.0 | 48.90993 | 48.87 | 'Auto - Check' | NULL | 'monthly' | 1 | 2024 | 'Transamerica' | 'Jan 2024' | -0.03993000000000535 | -0.08163986331611055 | 'acceptable'
-- 544 | 15 | 15 | 2024-03-11 | 117940.0 | 49.18098 | 50.53 | 'Auto - Check' | NULL | 'monthly' | 2 | 2024 | 'Transamerica' | 'Feb 2024' | 1.349020000000003 | 2.7429709615383895 | 'acceptable'
-- ...
-- 644 | 21 | 21 | 2022-05-16 | 65046.0 | 54.183318 | 53.96 | 'Auto - ACH' | NULL | 'monthly' | 4 | 2022 | 'John Hancock' | 'Apr 2022' | -0.22331799999999902 | -0.41215268507550423 | 'acceptable'
-- 645 | 21 | 21 | 2022-06-16 | 65287.0 | 54.384071 | 54.16 | 'Auto - ACH' | NULL | 'monthly' | 5 | 2022 | 'John Hancock' | 'May 2022' | -0.22407100000000213 | -0.41201586398341183 | 'acceptable'
-- 646 | 21 | 21 | 2022-07-15 | 60093.0 | 50.057469 | 49.84 | 'Auto - ACH' | NULL | 'monthly' | 6 | 2022 | 'John Hancock' | 'Jun 2022' | -0.21746899999999414 | -0.43443866488734006 | 'acceptable'
-- 647 | 21 | 21 | 2022-08-23 | 63768.0 | 53.118744 | 52.9 | 'Auto - ACH' | NULL | 'monthly' | 7 | 2022 | 'John Hancock' | 'Jul 2022' | -0.21874400000000094 | -0.41180190555710605 | 'acceptable'
-- 648 | 21 | 21 | 2022-09-15 | 61486.0 | 51.217838 | 51.0 | 'Auto - ACH' | NULL | 'monthly' | 8 | 2022 | 'John Hancock' | 'Aug 2022' | -0.21783800000000042 | -0.4253166640887896 | 'acceptable'
-- 649 | 21 | 21 | 2022-10-26 | 88680.0 | 73.87044 | 73.56 | 'Auto - ACH' | NULL | 'monthly' | 9 | 2022 | 'John Hancock' | 'Sep 2022' | -0.3104399999999998 | -0.4202492905145818 | 'acceptable'
-- 650 | 21 | 21 | 2022-12-15 | 99891.0 | 83.209203 | 82.88 | 'Auto - ACH' | NULL | 'monthly' | 11 | 2022 | 'John Hancock' | 'Nov 2022' | -0.3292030000000068 | -0.3956329205556827 | 'acceptable'
-- 652 | 21 | 21 | 2023-02-14 | 101985.0 | 84.953505 | 84.6 | 'Auto - ACH' | NULL | 'monthly' | 1 | 2023 | 'John Hancock' | 'Jan 2023' | -0.3535050000000126 | -0.4161158506644459 | 'acceptable'
-- 654 | 21 | 21 | 2023-03-14 | 99033.0 | 82.494489 | 82.16 | 'Auto - ACH' | NULL | 'monthly' | 2 | 2023 | 'John Hancock' | 'Feb 2023' | -0.3344890000000049 | -0.4054682974034846 | 'acceptable'
-- 655 | 21 | 21 | 2023-04-18 | 101375.0 | 84.445375 | 84.08 | 'Auto - ACH' | NULL | 'monthly' | 3 | 2023 | 'John Hancock' | 'Mar 2023' | -0.3653750000000002 | -0.4326761530752872 | 'acceptable'
-- ...
-- 746 | 23 | 23 | 2021-12-13 | 1324213.0 | 552.196821 | 550.47 | NULL | NULL | 'monthly' | 11 | 2021 | 'John Hancock' | 'Nov 2021' | -1.7268209999999726 | -0.31271838850372025 | 'acceptable'
-- 747 | 23 | 23 | 2022-01-24 | 1386189.0 | 578.040813 | 576.28 | NULL | NULL | 'monthly' | 12 | 2021 | 'John Hancock' | 'Dec 2021' | -1.7608129999999846 | -0.30461741807839865 | 'acceptable'
-- 748 | 23 | 23 | 2022-02-22 | 1342314.0 | 559.744938 | 558.0 | NULL | NULL | 'monthly' | 1 | 2022 | 'John Hancock' | 'Jan 2022' | -1.7449380000000474 | -0.31173805809388977 | 'acceptable'
-- 749 | 23 | 23 | 2022-03-15 | 1323989.0 | 552.103413 | 550.42 | NULL | NULL | 'monthly' | 2 | 2022 | 'John Hancock' | 'Feb 2022' | -1.6834130000000869 | -0.3049090008070801 | 'acceptable'
-- 750 | 23 | 23 | 2022-04-18 | 1354599.0 | 564.867783 | 563.08 | NULL | NULL | 'monthly' | 3 | 2022 | 'John Hancock' | 'Mar 2022' | -1.7877829999999904 | -0.31649583385781277 | 'acceptable'
-- 751 | 23 | 23 | 2022-05-16 | 1251442.0 | 521.851314 | 520.21 | NULL | NULL | 'monthly' | 4 | 2022 | 'John Hancock' | 'Apr 2022' | -1.6413139999999657 | -0.3145175562401603 | 'acceptable'
-- 752 | 23 | 23 | 2022-06-16 | 1277438.0 | 532.691646 | 531.07 | NULL | NULL | 'monthly' | 5 | 2022 | 'John Hancock' | 'May 2022' | -1.6216459999999415 | -0.30442489800186234 | 'acceptable'
-- 753 | 23 | 23 | 2022-07-15 | 1194457.0 | 498.088569 | 496.53 | NULL | NULL | 'monthly' | 6 | 2022 | 'John Hancock' | 'Jun 2022' | -1.558569000000034 | -0.3129100117935118 | 'acceptable'
-- 754 | 23 | 23 | 2022-08-23 | 1290329.0 | 538.067193 | 536.4 | NULL | NULL | 'monthly' | 7 | 2022 | 'John Hancock' | 'Jul 2022' | -1.6671929999999975 | -0.3098484764894405 | 'acceptable'
-- 755 | 23 | 23 | 2022-09-15 | 1254975.0 | 523.324575 | 521.74 | NULL | NULL | 'monthly' | 8 | 2022 | 'John Hancock' | 'Aug 2022' | -1.5845749999999725 | -0.3027900992419423 | 'acceptable'
-- ...
-- 857 | 34 | 28 | 2022-07-19 | 1984813.0 | 1323.870271 | 1323.22 | 'Auto - ACH' | NULL | 'monthly' | 6 | 2022 | 'Empower' | 'Jun 2022' | -0.6502709999999752 | -0.04911893666958665 | 'acceptable'
-- 858 | 34 | 28 | 2022-08-22 | 1973435.0 | 1316.281145 | 1315.63 | 'Auto - ACH' | NULL | 'monthly' | 7 | 2022 | 'Empower' | 'Jul 2022' | -0.6511449999998149 | -0.049468535082587924 | 'acceptable'
-- 859 | 34 | 28 | 2022-09-19 | 2044737.0 | 1363.839579 | 1363.16 | 'Auto - ACH' | NULL | 'monthly' | 8 | 2022 | 'Empower' | 'Aug 2022' | -0.679578999999876 | -0.049828367680761966 | 'acceptable'
-- 860 | 34 | 28 | 2022-10-26 | 1935767.0 | 1291.156589 | 1290.52 | 'Auto - ACH' | NULL | 'monthly' | 9 | 2022 | 'Empower' | 'Sep 2022' | -0.6365889999999581 | -0.04930377968275683 | 'acceptable'
-- 861 | 34 | 28 | 2022-11-22 | 1872094.0 | 1248.686698 | 1248.07 | 'Auto - ACH' | NULL | 'monthly' | 10 | 2022 | 'Empower' | 'Oct 2022' | -0.6166980000000422 | -0.04938772880241271 | 'acceptable'
-- 862 | 34 | 28 | 2022-12-19 | 1972936.0 | 1315.948312 | 1315.31 | 'Auto - ACH' | NULL | 'monthly' | 11 | 2022 | 'Empower' | 'Nov 2022' | -0.6383120000000417 | -0.048505856512701825 | 'acceptable'
-- 863 | 34 | 28 | 2023-01-23 | 1991184.0 | 1328.119728 | 1327.46 | 'Auto - ACH' | NULL | 'monthly' | 12 | 2022 | 'Empower' | 'Dec 2022' | -0.6597279999998591 | -0.049673834827627765 | 'acceptable'
-- 864 | 34 | 28 | 2023-02-21 | 2043124.0 | 1362.763708 | 1362.11 | 'Auto - ACH' | NULL | 'monthly' | 1 | 2023 | 'Empower' | 'Jan 2023' | -0.6537080000000515 | -0.047969284488756835 | 'acceptable'
-- 865 | 34 | 28 | 2023-03-20 | 2049178.0 | 1366.801726 | 1366.15 | 'Auto - ACH' | NULL | 'monthly' | 2 | 2023 | 'Empower' | 'Feb 2023' | -0.651725999999826 | -0.047682556116396504 | 'acceptable'
-- 866 | 34 | 28 | 2023-04-21 | 2036465.0 | 1358.322155 | 1357.64 | 'Auto - ACH' | NULL | 'monthly' | 3 | 2023 | 'Empower' | 'Mar 2023' | -0.6821549999999661 | -0.050220413286269784 | 'acceptable'
-- View: payment_status_base
-- =====================================================
-- Create a base view for payment status calculation
-- Used by both dashboard and sidebar views
-- =====================================================
CREATE VIEW [dbo].[payment_status_base] AS
WITH LastPayment AS (
    SELECT 
        client_id,
        applied_period,
        applied_year,
        applied_period_type,
        ROW_NUMBER() OVER (PARTITION BY client_id ORDER BY received_date DESC) as rn
    FROM payments
)
SELECT 
    c.client_id,
    ct.payment_schedule,
    lp.applied_period AS last_applied_period,
    lp.applied_year AS last_applied_year,
    lp.applied_period_type AS last_applied_period_type,
    
    -- Current billable period
    CASE 
        WHEN ct.payment_schedule = 'monthly' THEN 
            CASE WHEN MONTH(GETDATE()) = 1 THEN 12 ELSE MONTH(GETDATE()) - 1 END
        WHEN ct.payment_schedule = 'quarterly' THEN 
            CASE WHEN DATEPART(QUARTER, GETDATE()) = 1 THEN 4 ELSE DATEPART(QUARTER, GETDATE()) - 1 END
    END AS current_period,
    
    CASE 
        WHEN MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly' THEN YEAR(GETDATE()) - 1
        WHEN DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly' THEN YEAR(GETDATE()) - 1
        ELSE YEAR(GETDATE())
    END AS current_year,
    
    -- Payment status
    CASE
        WHEN lp.applied_year IS NULL THEN 'Due'
        WHEN lp.applied_year < CASE 
            WHEN (MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly') OR 
                 (DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly')
            THEN YEAR(GETDATE()) - 1
            ELSE YEAR(GETDATE()) 
        END THEN 'Due'
        WHEN lp.applied_year = CASE 
            WHEN (MONTH(GETDATE()) = 1 AND ct.payment_schedule = 'monthly') OR 
                 (DATEPART(QUARTER, GETDATE()) = 1 AND ct.payment_schedule = 'quarterly')
            THEN YEAR(GETDATE()) - 1
            ELSE YEAR(GETDATE()) 
        END AND lp.applied_period < CASE
            WHEN ct.payment_schedule = 'monthly' THEN 
                CASE WHEN MONTH(GETDATE()) = 1 THEN 12 ELSE MONTH(GETDATE()) - 1 END
            WHEN ct.payment_schedule = 'quarterly' THEN 
                CASE WHEN DATEPART(QUARTER, GETDATE()) = 1 THEN 4 ELSE DATEPART(QUARTER, GETDATE()) - 1 END
        END THEN 'Due'
        ELSE 'Paid'
    END AS payment_status
    
FROM clients c
JOIN contracts ct ON c.client_id = ct.client_id
LEFT JOIN LastPayment lp ON c.client_id = lp.client_id AND lp.rn = 1;
-- Sample data (29 total rows, showing 10):
-- client_id | payment_schedule | last_applied_period | last_applied_year | last_applied_period_type | current_period | current_year | payment_status
-- 1 | 'monthly' | 4 | 2025 | 'monthly' | 6 | 2025 | 'Due'
-- 2 | 'monthly' | 6 | 2024 | 'monthly' | 6 | 2025 | 'Due'
-- 3 | 'monthly' | 6 | 2024 | 'monthly' | 6 | 2025 | 'Due'
-- 4 | 'quarterly' | 1 | 2025 | 'quarterly' | 2 | 2025 | 'Due'
-- 5 | 'quarterly' | 1 | 2025 | 'quarterly' | 2 | 2025 | 'Due'
-- 6 | 'monthly' | 4 | 2025 | 'monthly' | 6 | 2025 | 'Due'
-- 7 | 'monthly' | 6 | 2024 | 'monthly' | 6 | 2025 | 'Due'
-- 8 | 'quarterly' | 1 | 2025 | 'quarterly' | 2 | 2025 | 'Due'
-- 9 | 'quarterly' | 1 | 2024 | 'quarterly' | 2 | 2025 | 'Due'
-- 10 | 'monthly' | 4 | 2025 | 'monthly' | 6 | 2025 | 'Due'
-- View: quarterly_totals
-- 3. CREATE THE NEW QUARTERLY_TOTALS VIEW WITH COUNT
CREATE VIEW quarterly_totals AS
SELECT 
    c.client_id,
    c.display_name,
    p.applied_year as year,
    CASE 
        WHEN p.applied_period_type = 'monthly' THEN 
            CASE 
                WHEN p.applied_period IN (1,2,3) THEN 1
                WHEN p.applied_period IN (4,5,6) THEN 2
                WHEN p.applied_period IN (7,8,9) THEN 3
                WHEN p.applied_period IN (10,11,12) THEN 4
            END
        WHEN p.applied_period_type = 'quarterly' THEN p.applied_period
    END as quarter,
    SUM(p.actual_fee) as total,
    COUNT(*) as payment_count
FROM clients c
LEFT JOIN payments p ON c.client_id = p.client_id
WHERE p.payment_id IS NOT NULL
GROUP BY 
    c.client_id, 
    c.display_name, 
    p.applied_year,
    CASE 
        WHEN p.applied_period_type = 'monthly' THEN 
            CASE 
                WHEN p.applied_period IN (1,2,3) THEN 1
                WHEN p.applied_period IN (4,5,6) THEN 2
                WHEN p.applied_period IN (7,8,9) THEN 3
                WHEN p.applied_period IN (10,11,12) THEN 4
            END
        WHEN p.applied_period_type = 'quarterly' THEN p.applied_period
    END;
-- Sample data (476 total rows, showing 50):
-- client_id | display_name | year | quarter | total | payment_count
-- 1 | 'AirSea America' | 2019 | 2 | 1640.08 | 3
-- 1 | 'AirSea America' | 2019 | 3 | 1692.0500000000002 | 3
-- 1 | 'AirSea America' | 2019 | 4 | 1764.92 | 3
-- 1 | 'AirSea America' | 2020 | 1 | 1745.8500000000001 | 3
-- 1 | 'AirSea America' | 2020 | 2 | 1785.61 | 3
-- 1 | 'AirSea America' | 2020 | 3 | 1899.5 | 3
-- 1 | 'AirSea America' | 2020 | 4 | 2005.0699999999997 | 3
-- 1 | 'AirSea America' | 2021 | 1 | 2139.5 | 3
-- 1 | 'AirSea America' | 2021 | 2 | 2275.85 | 3
-- 1 | 'AirSea America' | 2021 | 3 | 2389.7 | 3
-- ...
-- 6 | 'Bellmont Cabinets' | 2023 | 1 | 4151.75 | 3
-- 6 | 'Bellmont Cabinets' | 2023 | 2 | 4328.7 | 3
-- 6 | 'Bellmont Cabinets' | 2023 | 3 | 4513.64 | 3
-- 6 | 'Bellmont Cabinets' | 2023 | 4 | 4435.51 | 3
-- 6 | 'Bellmont Cabinets' | 2024 | 1 | 5008.63 | 3
-- 6 | 'Bellmont Cabinets' | 2024 | 2 | 5248.65 | 3
-- 6 | 'Bellmont Cabinets' | 2024 | 3 | 5653.56 | 3
-- 6 | 'Bellmont Cabinets' | 2024 | 4 | 5905.33 | 3
-- 6 | 'Bellmont Cabinets' | 2025 | 1 | 3727.84 | 2
-- 6 | 'Bellmont Cabinets' | 2025 | 2 | 1842.36 | 1
-- ...
-- 12 | 'Hansen Bros' | 2024 | 1 | 2250.0 | 1
-- 12 | 'Hansen Bros' | 2024 | 2 | 2250.0 | 1
-- 12 | 'Hansen Bros' | 2024 | 3 | 2250.0 | 1
-- 12 | 'Hansen Bros' | 2025 | 1 | 2250.0 | 1
-- 13 | 'Harper Engineering' | 2019 | 2 | 10000.0 | 1
-- 13 | 'Harper Engineering' | 2019 | 4 | 6666.62 | 2
-- 13 | 'Harper Engineering' | 2020 | 1 | 5000.01 | 1
-- 13 | 'Harper Engineering' | 2020 | 2 | 5000.0 | 1
-- 13 | 'Harper Engineering' | 2020 | 3 | 5000.01 | 1
-- 13 | 'Harper Engineering' | 2020 | 4 | 5000.01 | 1
-- ...
-- 18 | 'Marten Law' | 2021 | 4 | 2499.98 | 1
-- 18 | 'Marten Law' | 2022 | 1 | 2499.99 | 1
-- 18 | 'Marten Law' | 2022 | 2 | 2499.99 | 1
-- 18 | 'Marten Law' | 2022 | 3 | 2499.98 | 1
-- 18 | 'Marten Law' | 2022 | 4 | 3750.0 | 1
-- 18 | 'Marten Law' | 2023 | 1 | 2499.99 | 1
-- 18 | 'Marten Law' | 2023 | 2 | 2499.99 | 1
-- 18 | 'Marten Law' | 2023 | 3 | 2499.99 | 1
-- 18 | 'Marten Law' | 2023 | 4 | 2499.99 | 1
-- 18 | 'Marten Law' | 2024 | 1 | 2499.99 | 1
-- ...
-- 23 | 'Three Sigma' | 2024 | 3 | 2520.8199999999997 | 3
-- 23 | 'Three Sigma' | 2024 | 4 | 2578.79 | 3
-- 23 | 'Three Sigma' | 2025 | 1 | 1718.24 | 2
-- 23 | 'Three Sigma' | 2025 | 2 | 807.03 | 1
-- 24 | "Tony's Coffee" | 2023 | 2 | 730.47 | 1
-- 24 | "Tony's Coffee" | 2023 | 3 | 1139.91 | 1
-- 24 | "Tony's Coffee" | 2023 | 4 | 1180.15 | 1
-- 24 | "Tony's Coffee" | 2024 | 1 | 1343.37 | 1
-- 24 | "Tony's Coffee" | 2024 | 2 | 1552.48 | 1
-- 24 | "Tony's Coffee" | 2024 | 3 | 1738.71 | 1
-- View: sidebar_clients_view
CREATE VIEW [dbo].[sidebar_clients_view] AS
SELECT 
    c.client_id,
    c.display_name,
    ct.provider_name,
    CASE 
        WHEN ps.payment_status = 'Paid' THEN 'green'
        ELSE 'yellow'
    END AS compliance_status
FROM clients c
LEFT JOIN contracts ct ON c.client_id = ct.client_id
LEFT JOIN payment_status_base ps ON c.client_id = ps.client_id;
-- Sample data (29 total rows, showing 10):
-- client_id | display_name | provider_name | compliance_status
-- 1 | 'AirSea America' | 'John Hancock' | 'yellow'
-- 2 | 'Bumgardner Architects (ABC)' | 'Voya' | 'yellow'
-- 3 | 'Amplero' | 'Voya' | 'yellow'
-- 4 | 'Auction Edge' | 'John Hancock' | 'yellow'
-- 5 | 'BDR Interactive' | 'Ascensus Trust Company' | 'yellow'
-- 6 | 'Bellmont Cabinets' | 'John Hancock' | 'yellow'
-- 7 | 'Corina Bakery' | 'Voya' | 'yellow'
-- 8 | 'Dakota Creek' | 'Ascensus' | 'yellow'
-- 9 | 'CG Engineering' | 'Direct from CG Engineering' | 'yellow'
-- 10 | 'Fast Water Heater' | 'Empower' | 'yellow'
-- View: yearly_summaries
-- Create yearly view to replace the table
CREATE VIEW [dbo].[yearly_summaries_view] AS
WITH yearly_data AS (
    SELECT 
        client_id,
        applied_year as [year],
        SUM(actual_fee) as total_payments,
        AVG(total_assets) as total_assets,
        COUNT(*) as payment_count,
        AVG(actual_fee) as avg_payment
    FROM payments 
    GROUP BY client_id, applied_year
)
SELECT 
    y1.*,
    CASE 
        WHEN y2.total_payments > 0 
        THEN ((y1.total_payments - y2.total_payments) / y2.total_payments * 100) 
        ELSE NULL 
    END as yoy_growth,
    GETDATE() as last_updated
FROM yearly_data y1
LEFT JOIN yearly_data y2 ON y1.client_id = y2.client_id 
    AND y1.[year] = y2.[year] + 1;
-- Sample data (149 total rows, showing 20):
-- client_id | year | total_payments | total_assets | payment_count | avg_payment | yoy_growth | last_updated
-- 1 | 2019 | 5097.049999999999 | 844498.5 | 9 | 566.3388888888888 | NULL | 2025-07-08 21:08:39.167000
-- 1 | 2020 | 7436.03 | 943264.8181818182 | 12 | 619.6691666666667 | 45.888896518574484 | 2025-07-08 21:08:39.167000
-- 1 | 2021 | 9255.880000000001 | 1161233.9166666667 | 12 | 771.3233333333334 | 24.473408525785956 | 2025-07-08 21:08:39.167000
-- 1 | 2022 | 8285.99 | 1134042.6363636365 | 11 | 753.2718181818182 | -10.478636283097892 | 2025-07-08 21:08:39.167000
-- 1 | 2023 | 9434.779999999999 | 1183683.4166666667 | 12 | 786.2316666666666 | 13.864245551829042 | 2025-07-08 21:08:39.167000
-- 1 | 2024 | 10611.079999999998 | 1331245.1583333334 | 12 | 884.2566666666665 | 12.467699299824684 | 2025-07-08 21:08:39.167000
-- 1 | 2025 | 2786.4700000000003 | 1398365.1933333334 | 3 | 928.8233333333334 | -73.73999630574832 | 2025-07-08 21:08:39.167000
-- 2 | 2019 | 5062.51 | 2417574.6666666665 | 5 | 1012.5020000000001 | NULL | 2025-07-08 21:08:39.167000
-- 2 | 2020 | 13526.630000000001 | 2661752.6666666665 | 12 | 1127.2191666666668 | 167.1921635710349 | 2025-07-08 21:08:39.167000
-- 2 | 2021 | 18434.85 | NULL | 12 | 1536.2375 | 36.285608462713896 | 2025-07-08 21:08:39.167000
-- ...
-- 20 | 2019 | 4000.0 | NULL | 1 | 4000.0 | NULL | 2025-07-08 21:08:39.177000
-- 20 | 2020 | 17000.0 | NULL | 3 | 5666.666666666667 | 325.0 | 2025-07-08 21:08:39.177000
-- 20 | 2021 | 20000.0 | NULL | 4 | 5000.0 | 17.647058823529413 | 2025-07-08 21:08:39.177000
-- 20 | 2022 | 25000.0 | NULL | 4 | 6250.0 | 25.0 | 2025-07-08 21:08:39.177000
-- 20 | 2023 | 25000.0 | NULL | 4 | 6250.0 | 0.0 | 2025-07-08 21:08:39.177000
-- 20 | 2024 | 18750.0 | NULL | 3 | 6250.0 | -25.0 | 2025-07-08 21:08:39.177000
-- 20 | 2025 | 6250.0 | NULL | 1 | 6250.0 | -66.66666666666666 | 2025-07-08 21:08:39.177000
-- 21 | 2021 | 410.4 | 82462.33333333333 | 6 | 68.39999999999999 | NULL | 2025-07-08 21:08:39.177000
-- 21 | 2022 | 595.16 | 71745.4 | 10 | 59.516 | 45.019493177387915 | 2025-07-08 21:08:39.177000
-- 21 | 2023 | 1576.4699999999998 | 158361.75 | 12 | 131.37249999999997 | 164.88171248067744 | 2025-07-08 21:08:39.177000
-- ===== INDEXES =====
CREATE NONCLUSTERED INDEX [idx_contacts_client_id] ON [dbo].[contacts] (client_id);
CREATE NONCLUSTERED INDEX [idx_contacts_type] ON [dbo].[contacts] (client_id, contact_type);
CREATE NONCLUSTERED INDEX [idx_contracts_client_id] ON [dbo].[contracts] (client_id);
CREATE NONCLUSTERED INDEX [idx_contracts_provider] ON [dbo].[contracts] (provider_name);
CREATE NONCLUSTERED INDEX [idx_payment_periods_dates] ON [dbo].[payment_periods] (period_type, start_date, end_date);
CREATE NONCLUSTERED INDEX [idx_payments_client_id] ON [dbo].[payments] (client_id);
CREATE NONCLUSTERED INDEX [idx_payments_contract_id] ON [dbo].[payments] (contract_id);
CREATE NONCLUSTERED INDEX [idx_payments_date] ON [dbo].[payments] (client_id, received_date);
CREATE NONCLUSTERED INDEX [idx_payments_period_lookup] ON [dbo].[payments] (client_id, applied_year, applied_period) INCLUDE (actual_fee, expected_fee, total_assets, received_date);
-- ===== TRIGGERS =====